[tox]
envlist=lint
skipsdist=True

[ansible-base]
deps=
    bravado
    ansible
    swagger-spec-validator==2.6.0
    jsonschema<4
commands=
    python -VV
    bash -c 'workflow-support/run_test_playbooks.sh'

[galaxy-base]
deps=
    ansible
setenv=
    ANSIBLE_COLLECTIONS_PATH={envtmpdir}/collections
commands=
    ansible-playbook -i localhost, workflow-support/make-galaxy-yml.yml
    ansible-galaxy collection install -p {env:ANSIBLE_COLLECTIONS_PATH} src

[lint-base]
deps=
    black>=23
    ruff>=0.0.237
    ansible-lint

[testenv:lint-action]
ignore_errors=true
allowlist_externals=bash
deps=
    {[galaxy-base]deps}
    {[lint-base]deps}
setenv=
    {[galaxy-base]setenv}
commands=
    {[galaxy-base]commands}
    black --check --diff --preview src
    ruff check --format=github src
    bash -c 'shellcheck workflow-support/*.sh'
    bash -c 'ansible-lint --strict --profile production -v'

[testenv:lint]
allowlist_externals=bash
deps=
    {[galaxy-base]deps}
    {[lint-base]deps}
setenv=
    {[galaxy-base]setenv}
commands=
    {[galaxy-base]commands}
    black --preview src
    ruff check --fix src
    bash -c 'shellcheck workflow-support/*.sh'
    bash -c 'ansible-lint --write all --strict --profile production -v'

[testenv:py{38,39,310,311,312}-ci-action]
allowlist_externals=bash
passenv=pdns_version
deps=
    {[galaxy-base]deps}
    {[ansible-base]deps}
    dnspython
setenv=
    {[galaxy-base]setenv}
commands=
    {[galaxy-base]commands}
    {[ansible-base]commands}

[testenv:build]
deps=
    {[galaxy-base]deps}
setenv=
    TAG=local
commands=
    ansible-playbook -i localhost, workflow-support/build.yml

[testenv:publish-action]
passenv=ANSIBLE_GALAXY_TOKEN,TAG
deps=
    {[galaxy-base]deps}
commands=
    ansible-playbook -i localhost, workflow-support/build.yml
    ansible-playbook -i localhost, workflow-support/publish.yml
